name: Windows-Noetic-Build

on:
  push:
    branches:
      - master
      - feat/dev
  pull_request:
  schedule:
    - cron: '0 5 * * *'

jobs:
  windows_ci:
    name: Noetic
    runs-on: windows-2019
    env:
      ROS_DISTRO: noetic
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        path: src/tesseract_python
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build pip mamba
        ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - name: Build
      shell: cmd
      run: |
        mamba activate test
        
        conda config --env --add channels conda-forge
        conda config --env --add channels robostack-staging
        conda config --env --remove channels defaults
        mamba install ros-noetic-desktop-full -y
        mamba deactivate
        mamba activate test

        mamba install compilers cmake pkg-config make ninja colcon-common-extensions catkin_tools rosdep vcstool -y
        mamba install vs2019_win-64

        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=amd64 -host_arch=amd64

        rosdep update

        vcs import --input "${{ github.workspace }}/src/tesseract_python/dependencies_with_ext.rosinstall" src/
        
        rosdep install -q --from-paths . --ignore-src -y
        
        catkin_make_isolated --install --use-ninja --force-cmake --only-pkg-with-deps tesseract_python --cmake-args -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=C:/opt/ros/noetic/x64/python.exe -DPYTHON_LIBRARY=C:/opt/ros/noetic/x64/Lib/python38.lib -DINSTALL_OMPL=ON -DINSTALL_OMPL_TAG=master -DBUILD_IPOPT=OFF -DBUILD_SNOPT=OFF -DINSTALL_FCL=ON -DINSTALL_BULLET=ON -DNO_OPENCL=ON
        if %errorlevel% neq 0 exit /b %errorlevel%
        call "%CD%\install_isolated\setup.bat"
        set TESSERACT_SUPPORT_DIR=%CD%\src\tesseract\tesseract_support
        set TESSERACT_TASK_COMPOSER_DIR=%GITHUB_WORKSPACE%\src\tesseract_planning\tesseract_task_composer
        C:/opt/ros/noetic/x64/python.exe -m pytest src\tesseract_python\tesseract_python
        if %errorlevel% neq 0 exit /b %errorlevel%
